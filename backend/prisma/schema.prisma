generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  USER
  PHOTOGRAPHER
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique @db.VarChar(50)
  email    String @unique @db.VarChar(100)
  password String

  user_type UserType

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  photos Photo[]
}

model Photo {
  id          Int      @id @default(autoincrement())
  user_id     Int
  image       String
  photo_type  String
  title       String?  @db.VarChar(200)
  description String?  @db.Text
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Make user_id required since a photo should always belong to a user
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  // Add indexes for better query performance
  @@index([user_id])
}

model Booking {
  id            Int      @id @default(autoincrement())
  bookingType   String
  date          DateTime
  time          String
  photographer_id Int
  user_id       Int

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
